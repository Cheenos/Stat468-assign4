[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "STAT 468 Part 2: Assignments 1–3",
    "section": "",
    "text": "A1 F1 Pit Stop Times\nData Peek\n\n# Peek at the data and get basic stats\nhead(pit_stops)\n\n  raceId driverId stop lap     time duration milliseconds\n1    841      153    1   1 17:05:23   26.898        26898\n2    841       30    1   1 17:05:52   25.021        25021\n3    841       17    1  11 17:20:48   23.426        23426\n4    841        4    1  12 17:22:34   23.251        23251\n5    841       13    1  13 17:24:10   23.842        23842\n6    841       22    1  13 17:24:29   23.643        23643\n\nsummary(pit_stops)\n\n     raceId          driverId          stop             lap       \n Min.   : 841.0   Min.   :  1.0   Min.   : 1.000   Min.   : 1.00  \n 1st Qu.: 895.0   1st Qu.: 20.0   1st Qu.: 1.000   1st Qu.:13.00  \n Median : 971.0   Median :817.0   Median : 2.000   Median :25.00  \n Mean   : 981.2   Mean   :549.7   Mean   : 1.788   Mean   :25.39  \n 3rd Qu.:1065.0   3rd Qu.:835.0   3rd Qu.: 2.000   3rd Qu.:36.00  \n Max.   :1144.0   Max.   :862.0   Max.   :70.000   Max.   :78.00  \n     time             duration          milliseconds    \n Length:11371       Length:11371       Min.   :  12897  \n Class :character   Class :character   1st Qu.:  21938  \n Mode  :character   Mode  :character   Median :  23606  \n                                       Mean   :  85231  \n                                       3rd Qu.:  26544  \n                                       Max.   :3069017  \n\n\nScatterplot of Pit-Stop Times\n\npit_stops %&gt;%\n  mutate(seconds = milliseconds/1000) %&gt;%\n  filter(seconds &gt;= 3, seconds &lt;= 180) %&gt;%\n  ggplot(aes(x = lap, y = seconds)) +\n    geom_point(alpha = 0.6, color = \"steelblue\") +\n    labs(\n      x     = \"Lap Number\",\n      y     = \"Duration (seconds)\",\n      title = \"Pit-Stop Durations by Lap\"\n    ) +\n    theme_minimal()\n\n\n\n\n\n\n\n\nDensity By Lap\n\npit_stops %&gt;%\n  mutate(seconds = milliseconds/1000) %&gt;%\n  filter(seconds &gt;= 3, seconds &lt;= 180) %&gt;%\n  ggplot(aes(x = seconds)) +\n    geom_density(fill = \"steelblue\", alpha = 0.5) +\n    labs(\n      x = \"Duration (s)\",\n      y = \"Density\",\n      title = \"Overall Pit-Stop Duration Distribution\"\n    ) +\n    theme_minimal()\n\n\n\n\n\n\n\n\n\n\nA2 Blackjack Odds\n\n\nQuick look at the first few hands and summary stats\n\nhead(blkjck)\n\n  X PlayerNo card1 card2 card3 card4 card5 sumofcards dealcard1 dealcard2\n1 0  Player1     7    10     0     0     0         17        10         8\n2 1  Player2    10     9     0     0     0         19        10         8\n3 2  Player3     9     8     0     0     0         17        10         8\n4 3  Player4     2    10     0     5     0         17        10         8\n5 4  Player5    10     2     0     5     0         17        10         8\n6 5  Player6     6     1     8    10     0         25        10         8\n  dealcard3 dealcard4 dealcard5 sumofdeal blkjck winloss plybustbeat dlbustbeat\n1         0         0         0        18  nowin    Loss        Beat      Dlwin\n2         0         0         0        18  nowin     Win       Plwin       Beat\n3         0         0         0        18  nowin    Loss        Beat      Dlwin\n4         0         0         0        18  nowin    Loss        Beat      Dlwin\n5         0         0         0        18  nowin    Loss        Beat      Dlwin\n6         0         0         0        18  nowin    Loss        Bust     PlBust\n  plwinamt dlwinamt ply2cardsum\n1        0       10          17\n2       20        0          19\n3        0       10          17\n4        0       10          12\n5        0       10          12\n6        0       10           7\n\nsummary(blkjck)\n\n       X         PlayerNo             card1            card2      \n Min.   :0.0   Length:900000      Min.   : 1.000   Min.   : 1.00  \n 1st Qu.:1.0   Class :character   1st Qu.: 5.000   1st Qu.: 4.00  \n Median :2.5   Mode  :character   Median : 8.000   Median : 8.00  \n Mean   :2.5                      Mean   : 7.126   Mean   : 7.09  \n 3rd Qu.:4.0                      3rd Qu.:10.000   3rd Qu.:10.00  \n Max.   :5.0                      Max.   :11.000   Max.   :11.00  \n     card3            card4            card5           sumofcards  \n Min.   : 0.000   Min.   : 0.000   Min.   : 0.0000   Min.   : 8.0  \n 1st Qu.: 0.000   1st Qu.: 0.000   1st Qu.: 0.0000   1st Qu.:17.0  \n Median : 0.000   Median : 0.000   Median : 0.0000   Median :19.0  \n Mean   : 1.955   Mean   : 2.336   Mean   : 0.3898   Mean   :18.9  \n 3rd Qu.: 2.000   3rd Qu.: 4.000   3rd Qu.: 0.0000   3rd Qu.:21.0  \n Max.   :11.000   Max.   :10.000   Max.   :10.0000   Max.   :26.0  \n   dealcard1       dealcard2       dealcard3        dealcard4     \n Min.   : 1.00   Min.   : 1.00   Min.   : 0.000   Min.   : 0.000  \n 1st Qu.: 5.00   1st Qu.: 5.00   1st Qu.: 0.000   1st Qu.: 0.000  \n Median : 8.00   Median : 8.00   Median : 4.000   Median : 0.000  \n Mean   : 7.17   Mean   : 7.13   Mean   : 4.391   Mean   : 1.381  \n 3rd Qu.:10.00   3rd Qu.:10.00   3rd Qu.: 9.000   3rd Qu.: 0.000  \n Max.   :11.00   Max.   :11.00   Max.   :11.000   Max.   :10.000  \n   dealcard5         sumofdeal       blkjck            winloss         \n Min.   : 0.0000   Min.   : 8.0   Length:900000      Length:900000     \n 1st Qu.: 0.0000   1st Qu.:18.0   Class :character   Class :character  \n Median : 0.0000   Median :20.0   Mode  :character   Mode  :character  \n Mean   : 0.2264   Mean   :20.3                                        \n 3rd Qu.: 0.0000   3rd Qu.:22.0                                        \n Max.   :10.0000   Max.   :26.0                                        \n plybustbeat         dlbustbeat           plwinamt         dlwinamt     \n Length:900000      Length:900000      Min.   : 0.000   Min.   : 0.000  \n Class :character   Class :character   1st Qu.: 0.000   1st Qu.: 0.000  \n Mode  :character   Mode  :character   Median :10.000   Median : 0.000  \n                                       Mean   : 9.724   Mean   : 4.776  \n                                       3rd Qu.:20.000   3rd Qu.:10.000  \n                                       Max.   :25.000   Max.   :10.000  \n  ply2cardsum   \n Min.   : 2.00  \n 1st Qu.:12.00  \n Median :14.00  \n Mean   :14.22  \n 3rd Qu.:18.00  \n Max.   :21.00  \n\n\n\n\nWin-Rate Heatmap\n\nwin_tbl &lt;- blkjck %&gt;%\n  mutate(\n    player_sum    = card1 + card2,\n    dealer_upcard = factor(dealcard1),\n    win_flag      = ifelse(winloss == \"Win\", 1, 0)\n  ) %&gt;%\n  group_by(player_sum, dealer_upcard) %&gt;%\n  summarize(win_rate = mean(win_flag), .groups = \"drop\")\n\nggplot(win_tbl, aes(x = player_sum, y = dealer_upcard, fill = win_rate)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradient(\n    name   = \"Win Probability\",\n    low    = \"white\",\n    high   = \"blue\",\n    labels = scales::percent\n  ) +\n  scale_x_continuous(breaks = min(win_tbl$player_sum):max(win_tbl$player_sum)) +\n  labs(\n    x     = \"Player’s initial two-card sum\",\n    y     = \"Dealer’s up-card\",\n    title = \"Win Probability by Starting Hand & Dealer Up-Card\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nAverage Hits Heatmap\n\nhits_per_scenario &lt;- blkjck %&gt;%\n  mutate(\n    player_sum    = card1 + card2,\n    dealer_upcard = factor(dealcard1),\n    n_cards       = rowSums(across(card1:card5, ~ . != 0)),\n    hits          = pmax(0, n_cards - 2)\n  ) %&gt;%\n  group_by(player_sum, dealer_upcard) %&gt;%\n  summarize(avg_hits = mean(hits, na.rm = TRUE), .groups = \"drop\")\n\nggplot(hits_per_scenario, aes(x = player_sum, y = dealer_upcard, fill = avg_hits)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradient(\n    name = \"Avg # Hits\",\n    low  = \"white\",\n    high = \"red\"\n  ) +\n  scale_x_continuous(breaks = min(hits_per_scenario$player_sum):\n                         max(hits_per_scenario$player_sum)) +\n  labs(\n    x     = \"Player’s initial two-card sum\",\n    y     = \"Dealer’s up-card\",\n    title = \"Average Number of Hits by Starting Sum & Dealer Up-Card\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nHits by Win vs Loss\n\nhit_tbl &lt;- blkjck %&gt;%\n  mutate(\n    player_sum    = card1 + card2,\n    dealer_upcard = factor(dealcard1),\n    n_cards       = rowSums(across(card1:card5, ~ . != 0)),\n    hits          = pmax(0, n_cards - 2),\n    result        = if_else(winloss == \"Win\", \"Win\", \"Loss\")\n  ) %&gt;%\n  group_by(player_sum, dealer_upcard, result) %&gt;%\n  summarize(avg_hits = mean(hits, na.rm = TRUE), .groups = \"drop\")\n\nggplot(hit_tbl, aes(x = player_sum, y = dealer_upcard, fill = avg_hits)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradient(\n    name = \"Avg # Hits\",\n    low  = \"white\",\n    high = \"firebrick\"\n  ) +\n  scale_x_continuous(breaks = min(hit_tbl$player_sum):\n                         max(hit_tbl$player_sum)) +\n  facet_wrap(~ result, ncol = 2) +\n  labs(\n    x     = \"Player’s initial two-card sum\",\n    y     = \"Dealer’s up-card\",\n    title = \"Average Number of Hits by Sum & Up-Card\\nFaceted by Win vs. Loss\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nDelta Win-Rate (hit - stand) by starting sum and up card\n\ndelta_tbl3 &lt;- blkjck %&gt;%\n  mutate(\n    player_sum    = card1 + card2,\n    dealer_upcard = factor(dealcard1),\n    took_hit      = sumofcards &gt; (card1 + card2),\n    win_flag      = as.integer(winloss == \"Win\")\n  ) %&gt;%\n  group_by(player_sum, dealer_upcard, took_hit) %&gt;%\n  summarize(n_decision = n(), win_rate = mean(win_flag), .groups = \"drop\") %&gt;%\n  pivot_wider(\n    names_from   = took_hit,\n    names_prefix = \"hit_\",\n    values_from  = c(n_decision, win_rate)\n  ) %&gt;%\n  mutate(\n    win_rate_hit_FALSE    = coalesce(win_rate_hit_FALSE, 0),\n    n_decision_hit_FALSE  = coalesce(n_decision_hit_FALSE, 0),\n    delta                 = win_rate_hit_TRUE - win_rate_hit_FALSE\n  )\n\nggplot(delta_tbl3, aes(x = player_sum, y = dealer_upcard, fill = delta)) +\n  geom_tile(color = \"white\") +\n  annotate(\n    \"rect\",\n    xmin = 1, xmax = 12,\n    ymin = 1, ymax = 11,\n    color = \"black\",\n    fill  = NA,\n    size  = 1\n  ) +\n  annotate(\n    \"text\",\n    x     = 6, y = 11.5,\n    label   = \"Ace duality biases values\",\n    color   = \"black\",\n    size    = 4,\n    fontface= \"bold\"\n  ) +\n  scale_fill_gradient2(\n    name     = \"Δ Win-Rate\\n(hit − stand)\",\n    low      = \"#2166ac\",\n    mid      = \"white\",\n    high     = \"#b2182b\",\n    midpoint = 0,\n    labels   = scales::percent_format(accuracy = 1)\n  ) +\n  scale_x_continuous(breaks = min(delta_tbl3$player_sum):\n                         max(delta_tbl3$player_sum)) +\n  labs(\n    x        = \"Player’s initial two-card sum\",\n    y        = \"Dealer’s up-card\",\n    title    = \"Δ Win-Rate: Hit vs. Stand\",\n    subtitle = \"Assuming stand win-rate = 0% where never stood\",\n    caption  = \"Data: 900,000 hands from Kaggle\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.title      = element_text(face = \"bold\"),\n    plot.title      = element_text(face = \"bold\", size = 14),\n    plot.subtitle   = element_text(size = 11),\n    plot.caption    = element_text(size = 8, hjust = 1)\n  )\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\n\n\nA3 Poker Parsing\n\n\nPeek at the Data\n\nlength(hands)         # how many hands\n\n[1] 2468\n\nstr_sub(hands[[1]], 1, 200)  # preview first 200 chars of hand 1\n\n[1] \"Game started at: 2016/11/29 15:25:37\\nGame ID: 787027613 0.50/1 (PRR) Karkadann (Hold'em)\\nSeat 7 is the button\\nSeat 1: StephCurry (105.78).\\nSeat 2: PANDAisEVIL (101).\\nSeat 3: AironVega (103.20).\\nSeat 4\"\n\n\n\n\nParse Data\n\nextract_id_time &lt;- function(one_hand) {\n  gid &lt;- str_match(one_hand, \"Game ID:\\\\s*([0-9]+)\")[,2]\n  dt  &lt;- str_match(\n    one_hand,\n    \"Game started at:\\\\s*(\\\\d{4}[/-]\\\\d{1,2}[/-]\\\\d{1,2} \\\\d{2}:\\\\d{2}:\\\\d{2})\"\n  )[,2]\n  tibble(\n    game_id   = gid,\n    game_time = parse_date_time(dt, orders = c(\"Y/m/d H:M:S\", \"Y-m-d H:M:S\"))\n  )\n}\nid_time_tbl &lt;- map_dfr(hands, extract_id_time)\nid_time_tbl %&gt;% slice_head(n = 5)\n\n# A tibble: 5 × 2\n  game_id   game_time          \n  &lt;chr&gt;     &lt;dttm&gt;             \n1 787027613 2016-11-29 15:25:37\n2 787027929 2016-11-29 15:26:38\n3 787027464 2016-11-29 15:25:11\n4 787027410 NA                 \n5 787027157 2016-11-29 15:24:16\n\nparse_seats &lt;- function(one_hand) {\n  raw &lt;- str_extract_all(one_hand, \"Seat \\\\d+: [^(]+\\\\(\\\\d+\\\\.?\\\\d*\\\\)\")[[1]]\n  tibble(txt = raw) %&gt;%\n    extract(txt,\n            into = c(\"seat\",\"player\",\"stack\"),\n            regex = \"Seat\\\\s+(\\\\d+):\\\\s+([^\\\\(]+)\\\\((\\\\d+\\\\.?\\\\d*)\\\\)\",\n            convert = TRUE) %&gt;%\n    mutate(\n      game_id = str_match(one_hand, \"Game ID:\\\\s*([0-9]+)\")[,2],\n      player  = str_trim(player)\n    ) %&gt;%\n    select(game_id, seat, player, stack)\n}\nall_seats &lt;- map_dfr(hands, parse_seats)\nall_seats %&gt;% slice_head(n = 10)\n\n# A tibble: 10 × 4\n   game_id    seat player               stack\n   &lt;chr&gt;     &lt;int&gt; &lt;chr&gt;                &lt;dbl&gt;\n 1 787027613     1 StephCurry            106.\n 2 787027613     2 PANDAisEVIL           101 \n 3 787027613     3 AironVega             103.\n 4 787027613     4 IlxxxlI                43 \n 5 787027613     5 pineapplesand          40 \n 6 787027613     6 dankmann              207.\n 7 787027613     7 ElvenEyes             115 \n 8 787027613     8 gust                   46 \n 9 787027613     9 VegetablesArentYummy  274.\n10 787027929     1 StephCurry            106.\n\nextract_flop_cards &lt;- function(one_hand) {\n  gid  &lt;- str_match(one_hand, \"Game ID:\\\\s*([0-9]+)\")[,2]\n  lines &lt;- str_split(one_hand, \"\\\\r?\\\\n\")[[1]]\n  flop  &lt;- lines[str_detect(lines, \"^\\\\*\\\\*\\\\*\\\\s*FLOP\")]\n  cards &lt;- if (length(flop)) str_match(flop[1], \"\\\\[(.*?)\\\\]\")[,2] else NA\n  tibble(game_id = gid, flop_cards = cards)\n}\nflop_info &lt;- map_dfr(hands, extract_flop_cards)\nflop_info %&gt;% slice_head(n = 10)\n\n# A tibble: 10 × 2\n   game_id   flop_cards\n   &lt;chr&gt;     &lt;chr&gt;     \n 1 787027613 &lt;NA&gt;      \n 2 787027929 6d 5d 6s  \n 3 787027464 &lt;NA&gt;      \n 4 787027410 Jc 6c 8d  \n 5 787027157 &lt;NA&gt;      \n 6 787027105 Ah Js 2s  \n 7 787026943 &lt;NA&gt;      \n 8 787026888 &lt;NA&gt;      \n 9 787026881 10d 2h 5s \n10 787026850 &lt;NA&gt;      \n\nparse_preflop &lt;- function(one_hand) {\n  gid    &lt;- str_match(one_hand, \"Game ID:\\\\s*([0-9]+)\")[,2]\n  lines  &lt;- str_split(one_hand, \"\\\\r?\\\\n\")[[1]]\n  flop_i &lt;- which(str_detect(lines, \"^\\\\*\\\\*\\\\*\\\\s*FLOP\"))[1]\n  pat    &lt;- \"^\\\\s*Player\\\\s+([^\\\\s]+)\\\\s+(folds|checks|calls|raises|bets)(?:\\\\s*\\\\((\\\\d+\\\\.?\\\\d*)\\\\))?$\"\n  idx    &lt;- which(str_detect(lines, pat))\n  pre    &lt;- if (!is.na(flop_i)) idx[idx &lt; flop_i] else idx\n  if (!length(pre)) return(tibble())\n  tibble(line = pre, text = lines[pre]) %&gt;%\n    extract(text,\n            into = c(\"player\",\"action\",\"amount\"),\n            regex = pat) %&gt;%\n    mutate(\n      game_id        = gid,\n      player         = str_trim(player),\n      preflop_action = action,\n      preflop_amount = as.numeric(amount)\n    ) %&gt;%\n    group_by(game_id, player) %&gt;%\n    slice_max(order_by = line, n = 1, with_ties = FALSE) %&gt;%\n    ungroup() %&gt;%\n    select(game_id, player, preflop_action, preflop_amount)\n}\nall_preflop &lt;- map_dfr(hands, parse_preflop)\nall_preflop %&gt;% slice_head(n = 10)\n\n# A tibble: 10 × 4\n   game_id   player               preflop_action preflop_amount\n   &lt;chr&gt;     &lt;chr&gt;                &lt;chr&gt;                   &lt;dbl&gt;\n 1 787027613 AironVega            folds                      NA\n 2 787027613 ElvenEyes            folds                      NA\n 3 787027613 IlxxxlI              folds                      NA\n 4 787027613 PANDAisEVIL          folds                      NA\n 5 787027613 StephCurry           folds                      NA\n 6 787027613 VegetablesArentYummy folds                      NA\n 7 787027613 dankmann             raises                      3\n 8 787027613 gust                 folds                      NA\n 9 787027613 pineapplesand        folds                      NA\n10 787027929 AironVega            folds                      NA\n\nplayers_full &lt;- all_seats %&gt;%\n  left_join(id_time_tbl,   by = \"game_id\") %&gt;%\n  left_join(all_preflop,   by = c(\"game_id\",\"player\")) %&gt;%\n  left_join(flop_info,     by = \"game_id\") %&gt;%\n  arrange(game_id, seat)\n\nplayers_full %&gt;% print(n = 10)\n\n# A tibble: 15,146 × 8\n   game_id   seat player stack game_time           preflop_action preflop_amount\n   &lt;chr&gt;    &lt;int&gt; &lt;chr&gt;  &lt;dbl&gt; &lt;dttm&gt;              &lt;chr&gt;                   &lt;dbl&gt;\n 1 7712987…     1 AARON…  44.4 2016-11-09 22:39:55 checks                  NA   \n 2 7712987…     2 odel_…  26.7 2016-11-09 22:39:55 folds                   NA   \n 3 7712987…     3 Ilxxx…  10   2016-11-09 22:39:55 calls                    0.25\n 4 7712987…     4 Xiniay  31.1 2016-11-09 22:39:55 &lt;NA&gt;                    NA   \n 5 7713189…     1 Ilxxx…  20.4 NA                  folds                   NA   \n 6 7713189…     2 ls5ndr  51.9 NA                  folds                   NA   \n 7 7713189…     4 saida…  56.7 NA                  raises                   3.5 \n 8 7713189…     5 Kryuk…  55.1 NA                  folds                   NA   \n 9 7713189…     6 v0lan… 101.  NA                  folds                   NA   \n10 7794566…     1 n0hvn   57.2 NA                  folds                   NA   \n# ℹ 15,136 more rows\n# ℹ 1 more variable: flop_cards &lt;chr&gt;\n\n\n\n\nPivot to Wide Format\n\nplayers_wide &lt;- players_full %&gt;%\n  select(game_id, game_time, player, preflop_action) %&gt;%\n  mutate(player = str_to_upper(player)) %&gt;%\n  pivot_wider(\n    id_cols     = c(game_id, game_time),\n    names_from  = player,\n    values_from = preflop_action\n  )\n\nplayers_wide %&gt;% print(n = 10)\n\n# A tibble: 2,468 × 251\n   game_id   game_time           AARON81 ODEL_NADEL ILXXXLI XINIAY LS5NDR\n   &lt;chr&gt;     &lt;dttm&gt;              &lt;chr&gt;   &lt;chr&gt;      &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; \n 1 771298781 2016-11-09 22:39:55 checks  folds      calls   &lt;NA&gt;   &lt;NA&gt;  \n 2 771318908 NA                  &lt;NA&gt;    &lt;NA&gt;       folds   &lt;NA&gt;   folds \n 3 779456625 NA                  &lt;NA&gt;    &lt;NA&gt;       checks  &lt;NA&gt;   &lt;NA&gt;  \n 4 779457092 NA                  &lt;NA&gt;    &lt;NA&gt;       folds   &lt;NA&gt;   &lt;NA&gt;  \n 5 779457483 2016-11-19 23:12:49 &lt;NA&gt;    &lt;NA&gt;       folds   &lt;NA&gt;   &lt;NA&gt;  \n 6 779458017 2016-11-19 23:13:56 &lt;NA&gt;    &lt;NA&gt;       folds   &lt;NA&gt;   &lt;NA&gt;  \n 7 779458296 2016-11-19 23:14:31 &lt;NA&gt;    &lt;NA&gt;       folds   &lt;NA&gt;   &lt;NA&gt;  \n 8 779458970 2016-11-19 23:15:56 &lt;NA&gt;    &lt;NA&gt;       folds   &lt;NA&gt;   &lt;NA&gt;  \n 9 779459360 2016-11-19 23:16:46 &lt;NA&gt;    &lt;NA&gt;       folds   &lt;NA&gt;   &lt;NA&gt;  \n10 779459871 2016-11-19 23:17:49 &lt;NA&gt;    &lt;NA&gt;       folds   &lt;NA&gt;   &lt;NA&gt;  \n# ℹ 2,458 more rows\n# ℹ 244 more variables: SAIDAFRENTE &lt;chr&gt;, KRYUK13 &lt;chr&gt;, V0LANDITO &lt;chr&gt;,\n#   N0HVN &lt;chr&gt;, TBMFC &lt;chr&gt;, NAPRIMER &lt;chr&gt;, LOG_IN &lt;chr&gt;, COLDKILLA &lt;chr&gt;,\n#   GMJOHN &lt;chr&gt;, MANTISGUYV10 &lt;chr&gt;, BIGFCK &lt;chr&gt;, VONALARTA &lt;chr&gt;,\n#   TANKER123 &lt;chr&gt;, PINEAPPLESAND &lt;chr&gt;, JVIANA &lt;chr&gt;, EMMAGRACE &lt;chr&gt;,\n#   SR86 &lt;chr&gt;, WICHONSKI &lt;chr&gt;, CHRISNOLA &lt;chr&gt;, IFLOPZNUTS &lt;chr&gt;,\n#   FIRSTCLAN &lt;chr&gt;, `HAID DASALAMI` &lt;chr&gt;, BBDUB27 &lt;chr&gt;, POEPOE28 &lt;chr&gt;, …"
  },
  {
    "objectID": "assignment2.html",
    "href": "assignment2.html",
    "title": "Assignment 2: Part 2 Analysis",
    "section": "",
    "text": "A2 Blackjack Odds\n\n\nQuick look at the first few hands and summary stats\n\nhead(blkjck)\n\n  X PlayerNo card1 card2 card3 card4 card5 sumofcards dealcard1 dealcard2\n1 0  Player1     7    10     0     0     0         17        10         8\n2 1  Player2    10     9     0     0     0         19        10         8\n3 2  Player3     9     8     0     0     0         17        10         8\n4 3  Player4     2    10     0     5     0         17        10         8\n5 4  Player5    10     2     0     5     0         17        10         8\n6 5  Player6     6     1     8    10     0         25        10         8\n  dealcard3 dealcard4 dealcard5 sumofdeal blkjck winloss plybustbeat dlbustbeat\n1         0         0         0        18  nowin    Loss        Beat      Dlwin\n2         0         0         0        18  nowin     Win       Plwin       Beat\n3         0         0         0        18  nowin    Loss        Beat      Dlwin\n4         0         0         0        18  nowin    Loss        Beat      Dlwin\n5         0         0         0        18  nowin    Loss        Beat      Dlwin\n6         0         0         0        18  nowin    Loss        Bust     PlBust\n  plwinamt dlwinamt ply2cardsum\n1        0       10          17\n2       20        0          19\n3        0       10          17\n4        0       10          12\n5        0       10          12\n6        0       10           7\n\nsummary(blkjck)\n\n       X         PlayerNo             card1            card2      \n Min.   :0.0   Length:900000      Min.   : 1.000   Min.   : 1.00  \n 1st Qu.:1.0   Class :character   1st Qu.: 5.000   1st Qu.: 4.00  \n Median :2.5   Mode  :character   Median : 8.000   Median : 8.00  \n Mean   :2.5                      Mean   : 7.126   Mean   : 7.09  \n 3rd Qu.:4.0                      3rd Qu.:10.000   3rd Qu.:10.00  \n Max.   :5.0                      Max.   :11.000   Max.   :11.00  \n     card3            card4            card5           sumofcards  \n Min.   : 0.000   Min.   : 0.000   Min.   : 0.0000   Min.   : 8.0  \n 1st Qu.: 0.000   1st Qu.: 0.000   1st Qu.: 0.0000   1st Qu.:17.0  \n Median : 0.000   Median : 0.000   Median : 0.0000   Median :19.0  \n Mean   : 1.955   Mean   : 2.336   Mean   : 0.3898   Mean   :18.9  \n 3rd Qu.: 2.000   3rd Qu.: 4.000   3rd Qu.: 0.0000   3rd Qu.:21.0  \n Max.   :11.000   Max.   :10.000   Max.   :10.0000   Max.   :26.0  \n   dealcard1       dealcard2       dealcard3        dealcard4     \n Min.   : 1.00   Min.   : 1.00   Min.   : 0.000   Min.   : 0.000  \n 1st Qu.: 5.00   1st Qu.: 5.00   1st Qu.: 0.000   1st Qu.: 0.000  \n Median : 8.00   Median : 8.00   Median : 4.000   Median : 0.000  \n Mean   : 7.17   Mean   : 7.13   Mean   : 4.391   Mean   : 1.381  \n 3rd Qu.:10.00   3rd Qu.:10.00   3rd Qu.: 9.000   3rd Qu.: 0.000  \n Max.   :11.00   Max.   :11.00   Max.   :11.000   Max.   :10.000  \n   dealcard5         sumofdeal       blkjck            winloss         \n Min.   : 0.0000   Min.   : 8.0   Length:900000      Length:900000     \n 1st Qu.: 0.0000   1st Qu.:18.0   Class :character   Class :character  \n Median : 0.0000   Median :20.0   Mode  :character   Mode  :character  \n Mean   : 0.2264   Mean   :20.3                                        \n 3rd Qu.: 0.0000   3rd Qu.:22.0                                        \n Max.   :10.0000   Max.   :26.0                                        \n plybustbeat         dlbustbeat           plwinamt         dlwinamt     \n Length:900000      Length:900000      Min.   : 0.000   Min.   : 0.000  \n Class :character   Class :character   1st Qu.: 0.000   1st Qu.: 0.000  \n Mode  :character   Mode  :character   Median :10.000   Median : 0.000  \n                                       Mean   : 9.724   Mean   : 4.776  \n                                       3rd Qu.:20.000   3rd Qu.:10.000  \n                                       Max.   :25.000   Max.   :10.000  \n  ply2cardsum   \n Min.   : 2.00  \n 1st Qu.:12.00  \n Median :14.00  \n Mean   :14.22  \n 3rd Qu.:18.00  \n Max.   :21.00  \n\n\n\n\nWin-Rate Heatmap\n\nwin_tbl &lt;- blkjck %&gt;%\n  mutate(\n    player_sum    = card1 + card2,\n    dealer_upcard = factor(dealcard1),\n    win_flag      = ifelse(winloss == \"Win\", 1, 0)\n  ) %&gt;%\n  group_by(player_sum, dealer_upcard) %&gt;%\n  summarize(win_rate = mean(win_flag), .groups = \"drop\")\n\nggplot(win_tbl, aes(x = player_sum, y = dealer_upcard, fill = win_rate)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradient(\n    name   = \"Win Probability\",\n    low    = \"white\",\n    high   = \"blue\",\n    labels = scales::percent\n  ) +\n  scale_x_continuous(breaks = min(win_tbl$player_sum):max(win_tbl$player_sum)) +\n  labs(\n    x     = \"Player’s initial two-card sum\",\n    y     = \"Dealer’s up-card\",\n    title = \"Win Probability by Starting Hand & Dealer Up-Card\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nAverage Hits Heatmap\n\nhits_per_scenario &lt;- blkjck %&gt;%\n  mutate(\n    player_sum    = card1 + card2,\n    dealer_upcard = factor(dealcard1),\n    n_cards       = rowSums(across(card1:card5, ~ . != 0)),\n    hits          = pmax(0, n_cards - 2)\n  ) %&gt;%\n  group_by(player_sum, dealer_upcard) %&gt;%\n  summarize(avg_hits = mean(hits, na.rm = TRUE), .groups = \"drop\")\n\nggplot(hits_per_scenario, aes(x = player_sum, y = dealer_upcard, fill = avg_hits)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradient(\n    name = \"Avg # Hits\",\n    low  = \"white\",\n    high = \"red\"\n  ) +\n  scale_x_continuous(breaks = min(hits_per_scenario$player_sum):\n                         max(hits_per_scenario$player_sum)) +\n  labs(\n    x     = \"Player’s initial two-card sum\",\n    y     = \"Dealer’s up-card\",\n    title = \"Average Number of Hits by Starting Sum & Dealer Up-Card\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nHits by Win vs Loss\n\nhit_tbl &lt;- blkjck %&gt;%\n  mutate(\n    player_sum    = card1 + card2,\n    dealer_upcard = factor(dealcard1),\n    n_cards       = rowSums(across(card1:card5, ~ . != 0)),\n    hits          = pmax(0, n_cards - 2),\n    result        = if_else(winloss == \"Win\", \"Win\", \"Loss\")\n  ) %&gt;%\n  group_by(player_sum, dealer_upcard, result) %&gt;%\n  summarize(avg_hits = mean(hits, na.rm = TRUE), .groups = \"drop\")\n\nggplot(hit_tbl, aes(x = player_sum, y = dealer_upcard, fill = avg_hits)) +\n  geom_tile(color = \"white\") +\n  scale_fill_gradient(\n    name = \"Avg # Hits\",\n    low  = \"white\",\n    high = \"firebrick\"\n  ) +\n  scale_x_continuous(breaks = min(hit_tbl$player_sum):\n                         max(hit_tbl$player_sum)) +\n  facet_wrap(~ result, ncol = 2) +\n  labs(\n    x     = \"Player’s initial two-card sum\",\n    y     = \"Dealer’s up-card\",\n    title = \"Average Number of Hits by Sum & Up-Card\\nFaceted by Win vs. Loss\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\nDelta Win-Rate (hit - stand) by starting sum and up card\n\ndelta_tbl3 &lt;- blkjck %&gt;%\n  mutate(\n    player_sum    = card1 + card2,\n    dealer_upcard = factor(dealcard1),\n    took_hit      = sumofcards &gt; (card1 + card2),\n    win_flag      = as.integer(winloss == \"Win\")\n  ) %&gt;%\n  group_by(player_sum, dealer_upcard, took_hit) %&gt;%\n  summarize(n_decision = n(), win_rate = mean(win_flag), .groups = \"drop\") %&gt;%\n  pivot_wider(\n    names_from   = took_hit,\n    names_prefix = \"hit_\",\n    values_from  = c(n_decision, win_rate)\n  ) %&gt;%\n  mutate(\n    win_rate_hit_FALSE    = coalesce(win_rate_hit_FALSE, 0),\n    n_decision_hit_FALSE  = coalesce(n_decision_hit_FALSE, 0),\n    delta                 = win_rate_hit_TRUE - win_rate_hit_FALSE\n  )\n\nggplot(delta_tbl3, aes(x = player_sum, y = dealer_upcard, fill = delta)) +\n  geom_tile(color = \"white\") +\n  annotate(\n    \"rect\",\n    xmin = 1, xmax = 12,\n    ymin = 1, ymax = 11,\n    color = \"black\",\n    fill  = NA,\n    size  = 1\n  ) +\n  annotate(\n    \"text\",\n    x     = 6, y = 11.5,\n    label   = \"Ace duality biases values\",\n    color   = \"black\",\n    size    = 4,\n    fontface= \"bold\"\n  ) +\n  scale_fill_gradient2(\n    name     = \"Δ Win-Rate\\n(hit − stand)\",\n    low      = \"#2166ac\",\n    mid      = \"white\",\n    high     = \"#b2182b\",\n    midpoint = 0,\n    labels   = scales::percent_format(accuracy = 1)\n  ) +\n  scale_x_continuous(breaks = min(delta_tbl3$player_sum):\n                         max(delta_tbl3$player_sum)) +\n  labs(\n    x        = \"Player’s initial two-card sum\",\n    y        = \"Dealer’s up-card\",\n    title    = \"Δ Win-Rate: Hit vs. Stand\",\n    subtitle = \"Assuming stand win-rate = 0% where never stood\",\n    caption  = \"Data: 900,000 hands from Kaggle\"\n  ) +\n  theme_minimal() +\n  theme(\n    axis.title      = element_text(face = \"bold\"),\n    plot.title      = element_text(face = \"bold\", size = 14),\n    plot.subtitle   = element_text(size = 11),\n    plot.caption    = element_text(size = 8, hjust = 1)\n  )\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead."
  },
  {
    "objectID": "assignment1.html",
    "href": "assignment1.html",
    "title": "Assignment 1: Part 2 Analysis",
    "section": "",
    "text": "** A1 F1 Pit Stop Times**\nData Peek\n\n# Peek at the data and get basic stats\nhead(pit_stops)\n\n  raceId driverId stop lap     time duration milliseconds\n1    841      153    1   1 17:05:23   26.898        26898\n2    841       30    1   1 17:05:52   25.021        25021\n3    841       17    1  11 17:20:48   23.426        23426\n4    841        4    1  12 17:22:34   23.251        23251\n5    841       13    1  13 17:24:10   23.842        23842\n6    841       22    1  13 17:24:29   23.643        23643\n\nsummary(pit_stops)\n\n     raceId          driverId          stop             lap       \n Min.   : 841.0   Min.   :  1.0   Min.   : 1.000   Min.   : 1.00  \n 1st Qu.: 895.0   1st Qu.: 20.0   1st Qu.: 1.000   1st Qu.:13.00  \n Median : 971.0   Median :817.0   Median : 2.000   Median :25.00  \n Mean   : 981.2   Mean   :549.7   Mean   : 1.788   Mean   :25.39  \n 3rd Qu.:1065.0   3rd Qu.:835.0   3rd Qu.: 2.000   3rd Qu.:36.00  \n Max.   :1144.0   Max.   :862.0   Max.   :70.000   Max.   :78.00  \n     time             duration          milliseconds    \n Length:11371       Length:11371       Min.   :  12897  \n Class :character   Class :character   1st Qu.:  21938  \n Mode  :character   Mode  :character   Median :  23606  \n                                       Mean   :  85231  \n                                       3rd Qu.:  26544  \n                                       Max.   :3069017  \n\n\nScatterplot of Pit-Stop Times\n\npit_stops %&gt;%\n  mutate(seconds = milliseconds/1000) %&gt;%\n  filter(seconds &gt;= 3, seconds &lt;= 180) %&gt;%\n  ggplot(aes(x = lap, y = seconds)) +\n    geom_point(alpha = 0.6, color = \"steelblue\") +\n    labs(\n      x     = \"Lap Number\",\n      y     = \"Duration (seconds)\",\n      title = \"Pit-Stop Durations by Lap\"\n    ) +\n    theme_minimal()\n\n\n\n\n\n\n\n\nDensity By Lap\n\npit_stops %&gt;%\n  mutate(seconds = milliseconds/1000) %&gt;%\n  filter(seconds &gt;= 3, seconds &lt;= 180) %&gt;%\n  ggplot(aes(x = seconds)) +\n    geom_density(fill = \"steelblue\", alpha = 0.5) +\n    labs(\n      x = \"Duration (s)\",\n      y = \"Density\",\n      title = \"Overall Pit-Stop Duration Distribution\"\n    ) +\n    theme_minimal()"
  },
  {
    "objectID": "assignment3.html",
    "href": "assignment3.html",
    "title": "Assignment 3: Part 2 Analysis",
    "section": "",
    "text": "A3 Poker Parsing\n\n\nPeek at the Data\n\nlength(hands)         # how many hands\n\n[1] 2468\n\nstr_sub(hands[[1]], 1, 200)  # preview first 200 chars of hand 1\n\n[1] \"Game started at: 2016/11/29 15:25:37\\nGame ID: 787027613 0.50/1 (PRR) Karkadann (Hold'em)\\nSeat 7 is the button\\nSeat 1: StephCurry (105.78).\\nSeat 2: PANDAisEVIL (101).\\nSeat 3: AironVega (103.20).\\nSeat 4\"\n\n\n\n\nParse Data\n\nextract_id_time &lt;- function(one_hand) {\n  gid &lt;- str_match(one_hand, \"Game ID:\\\\s*([0-9]+)\")[,2]\n  dt  &lt;- str_match(\n    one_hand,\n    \"Game started at:\\\\s*(\\\\d{4}[/-]\\\\d{1,2}[/-]\\\\d{1,2} \\\\d{2}:\\\\d{2}:\\\\d{2})\"\n  )[,2]\n  tibble(\n    game_id   = gid,\n    game_time = parse_date_time(dt, orders = c(\"Y/m/d H:M:S\", \"Y-m-d H:M:S\"))\n  )\n}\nid_time_tbl &lt;- map_dfr(hands, extract_id_time)\nid_time_tbl %&gt;% slice_head(n = 5)\n\n# A tibble: 5 × 2\n  game_id   game_time          \n  &lt;chr&gt;     &lt;dttm&gt;             \n1 787027613 2016-11-29 15:25:37\n2 787027929 2016-11-29 15:26:38\n3 787027464 2016-11-29 15:25:11\n4 787027410 NA                 \n5 787027157 2016-11-29 15:24:16\n\nparse_seats &lt;- function(one_hand) {\n  raw &lt;- str_extract_all(one_hand, \"Seat \\\\d+: [^(]+\\\\(\\\\d+\\\\.?\\\\d*\\\\)\")[[1]]\n  tibble(txt = raw) %&gt;%\n    extract(txt,\n            into = c(\"seat\",\"player\",\"stack\"),\n            regex = \"Seat\\\\s+(\\\\d+):\\\\s+([^\\\\(]+)\\\\((\\\\d+\\\\.?\\\\d*)\\\\)\",\n            convert = TRUE) %&gt;%\n    mutate(\n      game_id = str_match(one_hand, \"Game ID:\\\\s*([0-9]+)\")[,2],\n      player  = str_trim(player)\n    ) %&gt;%\n    select(game_id, seat, player, stack)\n}\nall_seats &lt;- map_dfr(hands, parse_seats)\nall_seats %&gt;% slice_head(n = 10)\n\n# A tibble: 10 × 4\n   game_id    seat player               stack\n   &lt;chr&gt;     &lt;int&gt; &lt;chr&gt;                &lt;dbl&gt;\n 1 787027613     1 StephCurry            106.\n 2 787027613     2 PANDAisEVIL           101 \n 3 787027613     3 AironVega             103.\n 4 787027613     4 IlxxxlI                43 \n 5 787027613     5 pineapplesand          40 \n 6 787027613     6 dankmann              207.\n 7 787027613     7 ElvenEyes             115 \n 8 787027613     8 gust                   46 \n 9 787027613     9 VegetablesArentYummy  274.\n10 787027929     1 StephCurry            106.\n\nextract_flop_cards &lt;- function(one_hand) {\n  gid  &lt;- str_match(one_hand, \"Game ID:\\\\s*([0-9]+)\")[,2]\n  lines &lt;- str_split(one_hand, \"\\\\r?\\\\n\")[[1]]\n  flop  &lt;- lines[str_detect(lines, \"^\\\\*\\\\*\\\\*\\\\s*FLOP\")]\n  cards &lt;- if (length(flop)) str_match(flop[1], \"\\\\[(.*?)\\\\]\")[,2] else NA\n  tibble(game_id = gid, flop_cards = cards)\n}\nflop_info &lt;- map_dfr(hands, extract_flop_cards)\nflop_info %&gt;% slice_head(n = 10)\n\n# A tibble: 10 × 2\n   game_id   flop_cards\n   &lt;chr&gt;     &lt;chr&gt;     \n 1 787027613 &lt;NA&gt;      \n 2 787027929 6d 5d 6s  \n 3 787027464 &lt;NA&gt;      \n 4 787027410 Jc 6c 8d  \n 5 787027157 &lt;NA&gt;      \n 6 787027105 Ah Js 2s  \n 7 787026943 &lt;NA&gt;      \n 8 787026888 &lt;NA&gt;      \n 9 787026881 10d 2h 5s \n10 787026850 &lt;NA&gt;      \n\nparse_preflop &lt;- function(one_hand) {\n  gid    &lt;- str_match(one_hand, \"Game ID:\\\\s*([0-9]+)\")[,2]\n  lines  &lt;- str_split(one_hand, \"\\\\r?\\\\n\")[[1]]\n  flop_i &lt;- which(str_detect(lines, \"^\\\\*\\\\*\\\\*\\\\s*FLOP\"))[1]\n  pat    &lt;- \"^\\\\s*Player\\\\s+([^\\\\s]+)\\\\s+(folds|checks|calls|raises|bets)(?:\\\\s*\\\\((\\\\d+\\\\.?\\\\d*)\\\\))?$\"\n  idx    &lt;- which(str_detect(lines, pat))\n  pre    &lt;- if (!is.na(flop_i)) idx[idx &lt; flop_i] else idx\n  if (!length(pre)) return(tibble())\n  tibble(line = pre, text = lines[pre]) %&gt;%\n    extract(text,\n            into = c(\"player\",\"action\",\"amount\"),\n            regex = pat) %&gt;%\n    mutate(\n      game_id        = gid,\n      player         = str_trim(player),\n      preflop_action = action,\n      preflop_amount = as.numeric(amount)\n    ) %&gt;%\n    group_by(game_id, player) %&gt;%\n    slice_max(order_by = line, n = 1, with_ties = FALSE) %&gt;%\n    ungroup() %&gt;%\n    select(game_id, player, preflop_action, preflop_amount)\n}\nall_preflop &lt;- map_dfr(hands, parse_preflop)\nall_preflop %&gt;% slice_head(n = 10)\n\n# A tibble: 10 × 4\n   game_id   player               preflop_action preflop_amount\n   &lt;chr&gt;     &lt;chr&gt;                &lt;chr&gt;                   &lt;dbl&gt;\n 1 787027613 AironVega            folds                      NA\n 2 787027613 ElvenEyes            folds                      NA\n 3 787027613 IlxxxlI              folds                      NA\n 4 787027613 PANDAisEVIL          folds                      NA\n 5 787027613 StephCurry           folds                      NA\n 6 787027613 VegetablesArentYummy folds                      NA\n 7 787027613 dankmann             raises                      3\n 8 787027613 gust                 folds                      NA\n 9 787027613 pineapplesand        folds                      NA\n10 787027929 AironVega            folds                      NA\n\nplayers_full &lt;- all_seats %&gt;%\n  left_join(id_time_tbl,   by = \"game_id\") %&gt;%\n  left_join(all_preflop,   by = c(\"game_id\",\"player\")) %&gt;%\n  left_join(flop_info,     by = \"game_id\") %&gt;%\n  arrange(game_id, seat)\n\nplayers_full %&gt;% print(n = 10)\n\n# A tibble: 15,146 × 8\n   game_id   seat player stack game_time           preflop_action preflop_amount\n   &lt;chr&gt;    &lt;int&gt; &lt;chr&gt;  &lt;dbl&gt; &lt;dttm&gt;              &lt;chr&gt;                   &lt;dbl&gt;\n 1 7712987…     1 AARON…  44.4 2016-11-09 22:39:55 checks                  NA   \n 2 7712987…     2 odel_…  26.7 2016-11-09 22:39:55 folds                   NA   \n 3 7712987…     3 Ilxxx…  10   2016-11-09 22:39:55 calls                    0.25\n 4 7712987…     4 Xiniay  31.1 2016-11-09 22:39:55 &lt;NA&gt;                    NA   \n 5 7713189…     1 Ilxxx…  20.4 NA                  folds                   NA   \n 6 7713189…     2 ls5ndr  51.9 NA                  folds                   NA   \n 7 7713189…     4 saida…  56.7 NA                  raises                   3.5 \n 8 7713189…     5 Kryuk…  55.1 NA                  folds                   NA   \n 9 7713189…     6 v0lan… 101.  NA                  folds                   NA   \n10 7794566…     1 n0hvn   57.2 NA                  folds                   NA   \n# ℹ 15,136 more rows\n# ℹ 1 more variable: flop_cards &lt;chr&gt;\n\n\n\n\nPivot to Wide Format\n\nplayers_wide &lt;- players_full %&gt;%\n  select(game_id, game_time, player, preflop_action) %&gt;%\n  mutate(player = str_to_upper(player)) %&gt;%\n  pivot_wider(\n    id_cols     = c(game_id, game_time),\n    names_from  = player,\n    values_from = preflop_action\n  )\n\nplayers_wide %&gt;% print(n = 10)\n\n# A tibble: 2,468 × 251\n   game_id   game_time           AARON81 ODEL_NADEL ILXXXLI XINIAY LS5NDR\n   &lt;chr&gt;     &lt;dttm&gt;              &lt;chr&gt;   &lt;chr&gt;      &lt;chr&gt;   &lt;chr&gt;  &lt;chr&gt; \n 1 771298781 2016-11-09 22:39:55 checks  folds      calls   &lt;NA&gt;   &lt;NA&gt;  \n 2 771318908 NA                  &lt;NA&gt;    &lt;NA&gt;       folds   &lt;NA&gt;   folds \n 3 779456625 NA                  &lt;NA&gt;    &lt;NA&gt;       checks  &lt;NA&gt;   &lt;NA&gt;  \n 4 779457092 NA                  &lt;NA&gt;    &lt;NA&gt;       folds   &lt;NA&gt;   &lt;NA&gt;  \n 5 779457483 2016-11-19 23:12:49 &lt;NA&gt;    &lt;NA&gt;       folds   &lt;NA&gt;   &lt;NA&gt;  \n 6 779458017 2016-11-19 23:13:56 &lt;NA&gt;    &lt;NA&gt;       folds   &lt;NA&gt;   &lt;NA&gt;  \n 7 779458296 2016-11-19 23:14:31 &lt;NA&gt;    &lt;NA&gt;       folds   &lt;NA&gt;   &lt;NA&gt;  \n 8 779458970 2016-11-19 23:15:56 &lt;NA&gt;    &lt;NA&gt;       folds   &lt;NA&gt;   &lt;NA&gt;  \n 9 779459360 2016-11-19 23:16:46 &lt;NA&gt;    &lt;NA&gt;       folds   &lt;NA&gt;   &lt;NA&gt;  \n10 779459871 2016-11-19 23:17:49 &lt;NA&gt;    &lt;NA&gt;       folds   &lt;NA&gt;   &lt;NA&gt;  \n# ℹ 2,458 more rows\n# ℹ 244 more variables: SAIDAFRENTE &lt;chr&gt;, KRYUK13 &lt;chr&gt;, V0LANDITO &lt;chr&gt;,\n#   N0HVN &lt;chr&gt;, TBMFC &lt;chr&gt;, NAPRIMER &lt;chr&gt;, LOG_IN &lt;chr&gt;, COLDKILLA &lt;chr&gt;,\n#   GMJOHN &lt;chr&gt;, MANTISGUYV10 &lt;chr&gt;, BIGFCK &lt;chr&gt;, VONALARTA &lt;chr&gt;,\n#   TANKER123 &lt;chr&gt;, PINEAPPLESAND &lt;chr&gt;, JVIANA &lt;chr&gt;, EMMAGRACE &lt;chr&gt;,\n#   SR86 &lt;chr&gt;, WICHONSKI &lt;chr&gt;, CHRISNOLA &lt;chr&gt;, IFLOPZNUTS &lt;chr&gt;,\n#   FIRSTCLAN &lt;chr&gt;, `HAID DASALAMI` &lt;chr&gt;, BBDUB27 &lt;chr&gt;, POEPOE28 &lt;chr&gt;, …"
  }
]